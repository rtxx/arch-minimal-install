#!/bin/bash
# Simple arch install script
# REQUIREMENTS
# 1- Internet connection
#

PARTITION_BOOT=
PARTITION_ROOT=
PARTITION_SWAP=
GRUB_MBR_LOCATION=
GRUB_UEFI_NAME=

HOSTNAME=archx64
KEYMAP=pt-latin1
LOCALE=en_US.UTF-8

PACSTRAP_PKG_LIST="base linux linux-firmware nano networkmanager grub efibootmgr os-prober sudo bash-completion"

echo "arch minimal script install"

if [ -z "${PARTITION_BOOT}" ] || [ -z "${PARTITION_ROOT}" ] || [ -z "${PARTITION_SWAP}" ] ||  [ -z "${GRUB_MBR_LOCATION}" ] || [ -z "${GRUB_UEFI_NAME}" ];
then
echo "Please config script first."
exit
fi

if ping -q -w 1 -c 1 www.sapo.pt > /dev/null; then
	lsblk -f
	echo ""
    echo Formating $PARTITION_BOOT as boot
    echo Formating $PARTITION_SWAP as swap
    echo Formating $PARTITION_ROOT as root
    read -p "Continue? " -n 1 -r
	echo
	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		mkfs.ext4 $PARTITION_BOOT
		mkswap $PARTITION_SWAP
		mkfs.ext4 $PARTITION_ROOT
	else
		echo "Aborting..."
		exit
	fi
	read -p "Press Enter to continue."
	echo ""
		
	echo "Mounting partitions"
	mount $PARTITION_ROOT /mnt
	mkdir /mnt/{boot,home}
	mount $PARTITION_BOOT /mnt/boot
	swapon $PARTITION_SWAP
	read -p "Press Enter to continue."
	echo ""
	
	# pacstrap new packages
	echo "Installing packages with pacstrap"
	pacstrap /mnt $PACSTRAP_PKG_LIST
	read -p "Press Enter to continue."
	echo ""
		
	echo "Microde to install:"
	options=("Intel" "AMD" "Dont install" "Abort")
	select opt in "${options[@]}"
	do
		case $opt in
		    "Intel")
		        pacstrap /mnt intel-ucode
		        break
		        ;;
		    "AMD")
		        pacstrap /mnt amd-ucode
		        break
		        ;;
		    "Dont install")
		        break
		        ;;
		    "Abort")
		   		echo "Aborting..."
		        exit
		        ;;
		    *) echo "invalid option $REPLY";;
		esac
	done
	read -p "Press Enter to continue."
	echo ""
	
	# fstab gen
	echo "Generating fstab"
	genfstab -U /mnt >> /mnt/etc/fstab
	read -p "Press Enter to continue."
	echo ""
		
	# chroot into the new system
	echo "chroot into the new system"
	arch-chroot /mnt
	read -p "Press Enter to continue."
	echo ""
	
	# setting timezone
	echo "Setting Timezone"
	timedatectl set-timezone Europe/Lisbon
	read -p "Press Enter to continue."
	echo ""
	
	# generate /etc/adjtime
	echo "Generate /etc/adjtime"
	hwclock --systohc
	read -p "Press Enter to continue."
	echo ""
		
	# select locale
	echo "Select/Uncomment locale $LOCALE"
	nano /etc/locale.gen
	locale-gen
	read -p "Press Enter to continue."
	echo ""
	
	# create locale.conf
	echo "Creating locale.conf"
	echo "LANG=$LOCALE" >> /etc/locale.conf
	read -p "Press Enter to continue."
	echo ""
	
	# setting keyboard layout 
	echo "Setting keyboard layout"
	echo "KEYMAP=$KEYMAP" >> /etc/vconsole.conf
	read -p "Press Enter to continue."
	echo ""
	
	# setting hostname 
	echo "Setting host name"
	echo "$HOSTNAME" >> /etc/hostname
	read -p "Press Enter to continue."	
	echo ""
	
	# setting keyboard layout 
	echo "Setting keyboard layout"
	echo -e "127.0.0.1	localhost\n::1		localhost\n127.0.1.1	$HOSTNAME.localdomain	$HOSTNAME" >> /etc/hosts
	read -p "Press Enter to continue."
	echo ""
	
	# enable networkmanager service 
	echo "Enable networkmanager service"
	systemctl enable NetworkManager.service
	read -p "Press Enter to continue."		
	echo ""
	
	# recreate initramfs 
	echo "Recreate initramfs"
	mkinitcpio -P
	read -p "Press Enter to continue."
	echo ""
	
	echo "GRUB Install:"
	options=("MBR" "UEFI" "Dont install" "Abort")
	select opt in "${options[@]}"
	do
		case $opt in
		    "MBR")
		        grub-install --target=i386-pc $GRUB_MBR_LOCATION
		        break
		        ;;
		    "UEFI")
		        grub-install --target=x86_64-efi --efi-directory=/mnt/boot --bootloader-id=$GRUB_UEFI_NAME
		        break
		        ;;
		    "Dont install")
		        break
		        ;;
		    "Abort")
		   		echo "Aborting..."
		        exit
		        ;;
		    *) echo "invalid option $REPLY";;
		esac
	done
	read -p "Press Enter to continue."	
	echo ""
	
	# generate main config file for grub
	echo "Generate main config file for grub"
	grub-mkconfig -o /boot/grub/grub.cfg
	read -p "Press Enter to continue."
	echo ""
	
	# set root password
	echo "Set root password"
	passwd
	read -p "Press Enter to continue."
	echo ""
	
	read -p "Instalation Done. Please reboot."
	exit
				
else
	echo "Please check internet connection."
fi


# Sources
# https://devhints.io/bash
# https://stackoverflow.com/questions/929368/how-to-test-an-internet-connection-with-bash
# https://stackoverflow.com/questions/1885525/how-do-i-prompt-a-user-for-confirmation-in-bash-script
# https://askubuntu.com/questions/1705/how-can-i-create-a-select-menu-in-a-shell-script
# https://serverfault.com/questions/7503/how-to-determine-if-a-bash-variable-is-empty
